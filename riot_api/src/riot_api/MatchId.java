
/** 
 * This file has been auto-generated by REST Compile. 
 * 
 * You should not modify it, unless you know what you do. Any modification 
 * might cause serious damage, or even destroy your computer. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE. 
 */ 

package riot_api;

/**
 * This class has been auto-generated by REST Compile.
 *
 * @author REST Compile 
 */

import java.net.URLEncoder; 
import java.io.UnsupportedEncodingException; 


public class MatchId extends RestRequest {

  // class variables 
  private Integer matchId; // optional
  private String api_key; // optional 
  private String region;
  
  /**
   * constructor with 0 argument(s)
   * 
   */ 
  public MatchId() { 

    // empty constructor
 
  } 

  /**
   * constructor with 1 argument(s)
   * 
   * @param matchId
   */ 
  public MatchId(Integer matchId) { 

    // assign class variables 
    this.matchId = matchId;
 
  } 

  /**
   * constructor with 2 argument(s)
   * 
   * @param matchId
   * @param api_key
   */ 
  public MatchId(Integer matchId, String api_key) { 

    // assign class variables 
    this.matchId = matchId;
    this.api_key = api_key;
 
  } 


  /**
   * @return the String representation of the matchId
   */
  public Integer getMatchId() {
    if ((matchId + "").equals("null")) return null;
    return matchId;
  }

   /**
   * @return the String representation of the region
   */
  public String getRegion() {
    if ((api_key + "").equals("null")) return "";
    return ((Object) region).toString();
  }
  
   /**
   * @param region the region to set
   * @return the instance of the class (this) 
   */
  public MatchId getRegion(String region) {
    this.region = region;
    return this;
  }
  
  /**
   * @param matchId the matchId to set
   * @return the instance of the class (this) 
   */
  public MatchId setMatchId(Integer matchId) {
    this.matchId = matchId;
    return this;
  }

  /**
   * @return the String representation of the api_key
   */
  public String getApi_key() {
    if ((api_key + "").equals("null")) return "";
    return ((Object) api_key).toString();
  }

  /**
   * @param api_key the api_key to set
   * @return the instance of the class (this) 
   */
  public MatchId setApi_key(String api_key) {
    this.api_key = api_key;
    return this;
  }

  // prepares the POST or GET parameters 
  private String prepareParams() { 
    String paramString = ""; 

    try { 

      // optional parameters
      paramString += (!this.getApi_key().equals(""))?
        "&api_key=" + URLEncoder.encode(this.getApi_key(), "UTF-8") : "";
    } 
    catch (UnsupportedEncodingException e) { 
      System.err.println(e.toString()); 
    } 

    // strip off the first '&' 
    if (paramString.length() > 0) {
      paramString = paramString.substring(1);
    }
    return paramString; 

  } 

  private int getAndIncrement() {
      return this.matchId++;
  }
  
  // submits the request 
  public String getNextMatch() { 

    //created the getRegion function, we were going to hardcode this.
    //String region = this.getRegion();
    Integer matchId = this.getAndIncrement();
    String requestUri = "https://na.api.pvp.net/api/lol/" + "na" + "/v2.2/match/" + matchId;
    //String requestUri = "https://na.api.pvp.net/api/lol/" + "na" + "/v2.2/match/" + "1885303956";
    //String prepareParams = this.prepareParams();
    String api_key = "963af6ad-7ae0-4ec5-868d-df1b880bac8d";
    //String response = this.doGetCall(requestUri + "?" + this.prepareParams()); 
    String uri = requestUri + "?api_key=" + api_key;
     String response = this.doGetCall(uri); 
    return response; 

  } 

}